1636503121
AwuilbDvXz%3Abf8ae81bd52184d2cc8ffb482a889948-3541ae1888fd4ad91c37947381ef3bb4
s:5736:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjA6IkNyZWF0ZWQgYnkgUGhwU3Rvcm0uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQxOiJVc2VyOiBEYW50ZQpEYXRlOiA5LzI1LzIwMTcKVGltZTogNzo1NyBBTSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiMzU0MWFlMTg4OGZkNGFkOTFjMzc5NDczODFlZjNiYjQiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czoxNDoiRXZlbnREYXRlcy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxNDoiRXZlbnREYXRlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjI0ODE6Ijw/cGhwCgovKioKICogQ3JlYXRlZCBieSBQaHBTdG9ybS4KICogVXNlcjogRGFudGUKICogRGF0ZTogOS8yNS8yMDE3CiAqIFRpbWU6IDc6NTcgQU0KICovCgokdXNlcm5hbWUgPSAiVzAxMTYwMDE5IjsKJHBhc3N3b3JkID0gIk5pY2hvbGFzY3MhIjsKJGhvc3QgPSAibG9jYWxob3N0IjsgLy9kYi5jb29sZG9tYWluLmNvbQokZGJuYW1lID0gIlcwMTE2MDAxOSI7CgovKioKICogU2V0dXAgZGF0YWJhc2UKICovCnRyeSB7CiAgICAkZGJoID0gbmV3IFBETygibXlzcWw6aG9zdD0kaG9zdDtkYm5hbWU9JGRibmFtZSIsICR1c2VybmFtZSwgJHBhc3N3b3JkKTsKfSBjYXRjaCAoUERPRXhjZXB0aW9uICRlcnIpIHsKICAgIGVjaG8gIkknbSBzb3JyeSB1c2VyIERhdmUuIEkgY2FuJ3QgZG8gdGhhdC4gRXJyb3I6IiAuICRlcnItPmdldE1lc3NhZ2UoKTsKICAgIGRpZSgiRXJyb3I6IiAuICRlcnItPmdldE1lc3NhZ2UoKSk7Cn0KCiRkYmgtPnNldEF0dHJpYnV0ZShQRE86OkFUVFJfRVJSTU9ERSwgUERPOjpFUlJNT0RFX0VYQ0VQVElPTik7CgppZiAoIWVtcHR5KCRfUE9TVFsiZXZlbnROYW1lIl0pICYmICFlbXB0eSgkX1BPU1RbImV2ZW50RGVzY3JpcHRpb24iXSkgJiYgIWVtcHR5KCRfUE9TVFsiZXZlbnREYXRlIl0pKSB7CiAgICB0cnkgewoKICAgICAgICAkc3RtdEluc2VydEV2ZW50ID0gJGRiaC0+cHJlcGFyZSgiSU5TRVJUIElOVE8gQUNDYWxlbmRhckV2ZW50cyhldmVudE5hbWUsIGV2ZW50RGVzY3JpcHRpb24sIGV2ZW50RGF0ZSkgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWQUxVRVMoOmV2ZW50TmFtZSwgOmV2ZW50RGVzY3JpcHRpb24sIDpldmVudERhdGUpIik7CiAgICAgICAgJGV2ZW50TmFtZSA9ICRfUE9TVFsiZXZlbnROYW1lIl07CiAgICAgICAgJGV2ZW50RGVzY3JpcHRpb24gPSAkX1BPU1RbImV2ZW50RGVzY3JpcHRpb24iXTsKICAgICAgICAkZXZlbnREYXRlID0gJF9QT1NUWyJldmVudERhdGUiXTsKCiAgICAgICAgJHN0bXRJbnNlcnRFdmVudC0+YmluZFBhcmFtKCI6ZXZlbnROYW1lIiwgJGV2ZW50TmFtZSk7CiAgICAgICAgJHN0bXRJbnNlcnRFdmVudC0+YmluZFBhcmFtKCI6ZXZlbnREZXNjcmlwdGlvbiIsICRldmVudERlc2NyaXB0aW9uKTsKICAgICAgICAkc3RtdEluc2VydEV2ZW50LT5iaW5kUGFyYW0oIjpldmVudERhdGUiLCAkZXZlbnREYXRlKTsKICAgICAgICAkc3RtdEluc2VydEV2ZW50LT5leGVjdXRlKCk7CgogICAgICAgIGVjaG8gIkV2ZW50IGluc2VydGVkIHN1Y2Nlc3NmdWxseSEiOwogICAgfSBjYXRjaCAoUERPRXhjZXB0aW9uICRlKSB7CiAgICAgICAgZWNobyAiRXJyb3I6ICIgLiAkZS0+Z2V0TWVzc2FnZSgpOwogICAgfQp9IGVsc2UgaWYgKCFlbXB0eSgkX1BPU1RbImV2ZW50RGF0ZSJdKSAmJiAhZW1wdHkoJF9QT1NUWyJnZXQiXSkpIHsKICAgIHRyeSB7CgogICAgICAgICRzdG10U2VsZWN0RXZlbnQgPSAkZGJoLT5wcmVwYXJlKCJTRUxFQ1QgKgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBBQ0NhbGVuZGFyRXZlbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXSEVSRSBldmVudERhdGUgPSA6ZXZlbnREYXRlIik7CiAgICAgICAgJGV2ZW50RGF0ZSA9ICRfUE9TVFsiZXZlbnREYXRlIl07CgogICAgICAgICRzdG10U2VsZWN0RXZlbnQtPmJpbmRQYXJhbSgiOmV2ZW50RGF0ZSIsICRldmVudERhdGUpOwogICAgICAgICRzdG10U2VsZWN0RXZlbnQtPmV4ZWN1dGUoKTsKCiAgICAgICAgJHJvdyA9ICRzdG10U2VsZWN0RXZlbnQtPmZldGNoQWxsKFBETzo6RkVUQ0hfQVNTT0MpOwogICAgICAgIGVjaG8ganNvbl9lbmNvZGUoJHJvdyk7CiAgICB9IGNhdGNoIChQRE9FeGNlcHRpb24gJGUpIHsKICAgICAgICBlY2hvICJFcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCk7CiAgICB9Cn0gZWxzZSBpZiAoZW1wdHkoJF9QT1NUWyJldmVudERhdGUiXSkgJiYgKCFlbXB0eSgkX1BPU1RbImdldCJdKSAmJiAkX1BPU1RbImdldCJdID09PSAnMicpKSB7CiAgICB0cnkgewoKICAgICAgICAkc3RtdFNlbGVjdEV2ZW50ID0gJGRiaC0+cHJlcGFyZSgiU0VMRUNUIGV2ZW50RGF0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBBQ0NhbGVuZGFyRXZlbnRzIik7CgogICAgICAgICRzdG10U2VsZWN0RXZlbnQtPmV4ZWN1dGUoKTsKCiAgICAgICAgJHJvdyA9ICRzdG10U2VsZWN0RXZlbnQtPmZldGNoQWxsKFBETzo6RkVUQ0hfQVNTT0MpOwogICAgICAgIGVjaG8ganNvbl9lbmNvZGUoJHJvdyk7CiAgICB9IGNhdGNoIChQRE9FeGNlcHRpb24gJGUpIHsKICAgICAgICBlY2hvICJFcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCk7CiAgICB9Cn0gZWxzZSB7CiAgICBlY2hvICJTb3JyeSwgYW4gZXJyb3Igb2NjdXJyZWQiOwp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";
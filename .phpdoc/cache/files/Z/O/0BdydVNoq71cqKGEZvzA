1636522912
AwuilbDvXz%3Ac4158f586d0ce4430e4d74fcb431bd3a-9fa4d0d99dc2cc6900e6fe6490fb1730
s:5876:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjA6IkNyZWF0ZWQgYnkgUGhwU3Rvcm0uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQxOiJVc2VyOiBEYW50ZQpEYXRlOiA5LzI1LzIwMTcKVGltZTogNzo1NyBBTSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiOWZhNGQwZDk5ZGMyY2M2OTAwZTZmZTY0OTBmYjE3MzAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czoxNDoiRmlsZVVwbG9hZC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxNDoiRmlsZVVwbG9hZC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjI1ODY6Ijw/cGhwCgovKioKICogQ3JlYXRlZCBieSBQaHBTdG9ybS4KICogVXNlcjogRGFudGUKICogRGF0ZTogOS8yNS8yMDE3CiAqIFRpbWU6IDc6NTcgQU0KICovCgovLyBVc2FnZSBmb3IgTXlTcWwKJHVzZXJuYW1lID0gIm5lYXJpenBlX05pY2tBIjsgLy8gIlcwMTE2MDAxOSI7CiRwYXNzd29yZCA9ICJEckZyeTIwMjAiOyAvLyAiTmljaG9sYXNjcyEiOwokaG9zdCA9ICJsb2NhbGhvc3QiOyAvL2RiLmNvb2xkb21haW4uY29tCiRkYm5hbWUgPSAibmVhcml6cGVfQW5pbWFsQ3Jvc3NpbmdEQiI7IC8vICJXMDExNjAwMTkiOwoKCi8qKgogKiBTZXR1cCBkYXRhYmFzZQogKi8KdHJ5IHsKICAgICRkYmggPSBuZXcgUERPKCJteXNxbDpob3N0PSRob3N0O2RibmFtZT0kZGJuYW1lIiwgJHVzZXJuYW1lLCAkcGFzc3dvcmQpOwp9IGNhdGNoIChQRE9FeGNlcHRpb24gJGVycikgewogICAgZWNobyAiSSdtIHNvcnJ5IHVzZXIgRGF2ZS4gSSBjYW4ndCBkbyB0aGF0LiBFcnJvcjoiIC4gJGVyci0+Z2V0TWVzc2FnZSgpOwogICAgZGllKCJFcnJvcjoiIC4gJGVyci0+Z2V0TWVzc2FnZSgpKTsKfQoKJGRiaC0+c2V0QXR0cmlidXRlKFBETzo6QVRUUl9FUlJNT0RFLCBQRE86OkVSUk1PREVfRVhDRVBUSU9OKTsKCmlmIChpc3NldCgkX0ZJTEVTWydmaWxlVG9VcGxvYWQnXSkpIHsKICAgICR1cGxvYWRPayA9IDE7CgogICAgJHRhcmdldF9maWxlID0gYmFzZW5hbWUoJF9GSUxFU1siZmlsZVRvVXBsb2FkIl1bIm5hbWUiXSk7CiAgICAkZmlsZVR5cGUgPSBzdHJ0b2xvd2VyKHBhdGhpbmZvKCR0YXJnZXRfZmlsZSwgUEFUSElORk9fRVhURU5TSU9OKSk7CgogICAgaWYgKCRmaWxlVHlwZSAhPSAiZ2NpIikgewogICAgICAgIGVjaG8gIlNvcnJ5LCBvbmx5IEdDSSBmaWxlcyBhcmUgYWxsb3dlZC4iOwogICAgICAgICR1cGxvYWRPayA9IDA7CiAgICB9CgogICAgaWYgKCRfRklMRVNbImZpbGVUb1VwbG9hZCJdWyJzaXplIl0gPiA3MDAwMDApIHsKICAgICAgICBlY2hvICJTb3JyeSwgeW91ciBmaWxlIGlzIHRvbyBsYXJnZS4iOwogICAgICAgICR1cGxvYWRPayA9IDA7CiAgICB9CgogICAgaWYgKGlzc2V0KCRfRklMRVNbJ2ZpbGVUb1VwbG9hZCddKSAmJiAkX0ZJTEVTWydmaWxlVG9VcGxvYWQnXVsnc2l6ZSddID4gMCAmJiAkdXBsb2FkT2sgPT09IDEpIHsKICAgICAgICAkdG1wTmFtZSAgPSAkX0ZJTEVTWydmaWxlVG9VcGxvYWQnXVsndG1wX25hbWUnXTsKCiAgICAgICAgJGZwID0gZm9wZW4oJHRtcE5hbWUsICdyYicpOyAvLyByZWFkIGJpbmFyeQoKICAgICAgICB0cnkgewogICAgICAgICAgICAkc3RtdEluc2VydEZpbGUgPSAkZGJoLT5wcmVwYXJlKCJJTlNFUlQgSU5UTyBBQ0ZpbGUoZmlsZURhdGEsIGRhdGVVcGxvYWQpIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZBTFVFUyg6ZmlsZURhdGEsIDpkYXRlVXBsb2FkKSIpOwoKICAgICAgICAgICAgJGRhdGVGb3JtYXQgPSBkYXRlKCdZLW0tZCcpOwogICAgICAgICAgICAkc3RtdEluc2VydEZpbGUtPmJpbmRQYXJhbSgiOmZpbGVEYXRhIiwgJGZwLCBQRE86OlBBUkFNX0xPQik7CiAgICAgICAgICAgICRzdG10SW5zZXJ0RmlsZS0+YmluZFBhcmFtKCI6ZGF0ZVVwbG9hZCIsICRkYXRlRm9ybWF0KTsKCiAgICAgICAgICAgICRzdG10SW5zZXJ0RmlsZS0+ZXhlY3V0ZSgpOwoKICAgICAgICAgICAgZWNobyAic3VjY2VzcyI7CiAgICAgICAgfSBjYXRjaCAoUERPRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgIGVjaG8gJ0Vycm9yOiAnIC4gJGUtPmdldE1lc3NhZ2UoKTsKICAgICAgICB9CiAgICB9Cn0gZWxzZSB7CiAgICB0cnkgewogICAgICAgICRzdG10RG93bmxvYWRGaWxlID0gJGRiaC0+cHJlcGFyZSgiU0VMRUNUIGZpbGVEYXRhIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NIEFDRmlsZSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV0hFUkUgZmlsZUlkPSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTRUxFQ1QgbWF4KGZpbGVJZCkgRlJPTSBBQ0ZpbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIik7CgogICAgICAgICRzdG10RG93bmxvYWRGaWxlLT5leGVjdXRlKCk7CgogICAgICAgICRyZXN1bHRzID0gJHN0bXREb3dubG9hZEZpbGUtPmZldGNoKCk7CiAgICAgICAgbGlzdCgkY29udGVudCkgPSAkcmVzdWx0czsKICAgICAgICBoZWFkZXIoIkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIik7CiAgICAgICAgaGVhZGVyKCJDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0wMS1HQUZFLURvYnV0c3Vub21vcmlQX01VUkEuZ2NpIik7CiAgICAgICAgZWNobyAkY29udGVudDsKICAgICAgICBleGl0OwogICAgfSBjYXRjaCAoUERPRXhjZXB0aW9uICRlKSB7CiAgICAgICAgZWNobyAnRXJyb3I6ICcgLiAkZS0+Z2V0TWVzc2FnZSgpOwogICAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";
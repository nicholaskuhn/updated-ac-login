1636505728
AwuilbDvXz%3Ab8761be0bf7c7deb5c3d992140fa4cfe-f80f66d9137e9f704bcb1ad500c3ff07
s:7660:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjA6IkNyZWF0ZWQgYnkgUGhwU3Rvcm0uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQxOiJVc2VyOiBEYW50ZQpEYXRlOiA5LzI1LzIwMTcKVGltZTogNzo1NyBBTSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6NzoicGFja2FnZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NzoiQ29tbWFuZCI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiZjgwZjY2ZDkxMzdlOWY3MDRiY2IxYWQ1MDBjM2ZmMDciO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czoxMzoiVXNlckxvZ2luLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjEzOiJVc2VyTG9naW4ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNjEzOiI8P3BocAoKLyoqCiAqIENyZWF0ZWQgYnkgUGhwU3Rvcm0uCiAqIFVzZXI6IERhbnRlCiAqIERhdGU6IDkvMjUvMjAxNwogKiBUaW1lOiA3OjU3IEFNCiAqIAogKiBAcGFja2FnZSBDb21tYW5kCiAqLwoKJHVzZXJuYW1lID0gIlcwMTE2MDAxOSI7CiRwYXNzd29yZCA9ICJOaWNob2xhc2NzISI7CiRob3N0ID0gImxvY2FsaG9zdCI7IC8vZGIuY29vbGRvbWFpbi5jb20KJGRibmFtZSA9ICJXMDExNjAwMTkiOwoKLyoqCiAqIFNldHVwIGRhdGFiYXNlCiAqLwp0cnkgewogICAgJGRiaCA9IG5ldyBQRE8oIm15c3FsOmhvc3Q9JGhvc3Q7ZGJuYW1lPSRkYm5hbWUiLCAkdXNlcm5hbWUsICRwYXNzd29yZCk7Cn0gY2F0Y2ggKFBET0V4Y2VwdGlvbiAkZXJyKSB7CiAgICBlY2hvICJJJ20gc29ycnkgdXNlciBEYXZlLiBJIGNhbid0IGRvIHRoYXQuIEVycm9yOiIgLiAkZXJyLT5nZXRNZXNzYWdlKCk7CiAgICBkaWUoIkVycm9yOiIgLiAkZXJyLT5nZXRNZXNzYWdlKCkpOwp9CgokZGJoLT5zZXRBdHRyaWJ1dGUoUERPOjpBVFRSX0VSUk1PREUsIFBETzo6RVJSTU9ERV9FWENFUFRJT04pOwoKLyoqCiAqIENoZWNrcyB0byBzZWUgaWYgeW91J3JlIHRyeWluZyB0byBsb2dpbiBhcyBhIG5ldyB1c2VyIG9yIGlmIHNvbWVib2R5IGlzIGFscmVhZHkgbG9nZ2VkIGluLgogKiBJZiB0aGUgbm8gb25lIGlzIGxvZ2dlZCBpbiAodmFsdWUgPSAwKSwgaW5zZXJ0cyBhIHJlY29yZCBpbnRvIHRoZSBBQ1VzZXJMb2dpbiB0YWJsZSB0byAibG9nIiB0aGVtIGluLgogKiBJZiB0aGV5IGFyZSBsb2dnaW5nIG91dCAodmFsdWUgPSAxKSwgdGhlbiBpdCB1cGRhdGVzIHRoZSByZWNvcmQgaW4gQUNVc2VyTG9naW4gd2l0aCB0aGUgbG9nZ2VkIG91dCB2YWx1ZS4KICogSWYgbG9nZ2VkT3V0IGlzICh2YWx1ZSA9IDMpLCB0aGlzIGlzIHRoZSBwYWdlIGxvYWRpbmcgdXAgYW5kIGdldHRpbmcgdGhlIGN1cnJlbnQgbG9naW4gc3RhdGUuCiAqCiAqIEBwYXJhbSBTdHJpbmcgdXNlcm5hbWUgaXMgdGhlIHVzZXJuYW1lIGNsaWNrZWQgb24KICogQHBhcmFtIFN0cmluZyBsb2dnZWRPdXQgaXMgZm9yIGlmIHRoZSB1c2VyIGlzIGxvZ2dpbmcgaW4gb3Igb3V0CiAqIEBwYXJhbSBEYXRlIGxvZ2luVGltZSBpcyBmb3IgdGhlIGRhdGUgdGhlIHVzZXIgbG9nZ2VkIGluL291dAogKiAKICogQHJldHVybiBTdHJpbmcgcmV0dXJucyBlaXRoZXIgdGhlIG5hbWUgb2YgdGhlIHVzZXIgbG9nZ2VkIGluIG9yIHRoZSBzdGF0dXMgb2YgdGhlIHBlcnNvbiBsb2dnZWQgaW4KICoKICovCmlmICghZW1wdHkoJF9QT1NUWyJ1c2VybmFtZSJdKSAmJiAhZW1wdHkoJF9QT1NUWyJsb2dpblRpbWUiXSkgJiYgKCRfUE9TVFsibG9nZ2VkT3V0Il0gPT09ICcwJyB8fCAhZW1wdHkoJF9QT1NUWyJsb2dnZWRPdXQiXSkpKSB7CiAgICB0cnkgewogICAgICAgIGlmICgkX1BPU1RbImxvZ2dlZE91dCJdID09PSAnMCcpIHsKICAgICAgICAgICAgJHN0bXRJbnNlcnRVc2VyUmVjID0gJGRiaC0+cHJlcGFyZSgiSU5TRVJUIElOVE8gQUNVc2VyTG9naW4odXNlcm5hbWUsIGxvZ2luVGltZSwgbG9nZ2VkT3V0KSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVkFMVUVTKDp1c2VybmFtZSwgOmxvZ2luVGltZSwgOmxvZ2dlZE91dCkiKTsKICAgICAgICAgICAgJHVzZXJuYW1lID0gJF9QT1NUWyJ1c2VybmFtZSJdOwogICAgICAgICAgICAkbG9naW5UaW1lID0gJF9QT1NUWyJsb2dpblRpbWUiXTsKICAgICAgICAgICAgJGxvZ2dlZE91dCA9ICRfUE9TVFsibG9nZ2VkT3V0Il07CgogICAgICAgICAgICAkc3RtdEluc2VydFVzZXJSZWMtPmJpbmRQYXJhbSgiOnVzZXJuYW1lIiwgJHVzZXJuYW1lKTsKICAgICAgICAgICAgJHN0bXRJbnNlcnRVc2VyUmVjLT5iaW5kUGFyYW0oIjpsb2dpblRpbWUiLCAkbG9naW5UaW1lKTsKICAgICAgICAgICAgJHN0bXRJbnNlcnRVc2VyUmVjLT5iaW5kUGFyYW0oIjpsb2dnZWRPdXQiLCAkbG9nZ2VkT3V0KTsKCiAgICAgICAgICAgICRzdG10SW5zZXJ0VXNlclJlYy0+ZXhlY3V0ZSgpOwogICAgICAgICAgICBlY2hvICJsb2dnZWRVc2VySW4iOwogICAgICAgIH0gZWxzZSBpZiAoJF9QT1NUWyJsb2dnZWRPdXQiXSA9PT0gJzEnKSB7CiAgICAgICAgICAgICRzdG10SW5zZXJ0VXNlclJlYyA9ICRkYmgtPnByZXBhcmUoIlVQREFURSBBQ1VzZXJMb2dpbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTRVQgbG9nZ2VkT3V0ID0gOmxvZ2dlZE91dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXSEVSRSB1c2VybmFtZSA9IDp1c2VybmFtZSIpOwogICAgICAgICAgICAkdXNlcm5hbWUgPSAkX1BPU1RbInVzZXJuYW1lIl07CiAgICAgICAgICAgICRsb2dnZWRPdXQgPSAkX1BPU1RbImxvZ2dlZE91dCJdOwoKICAgICAgICAgICAgJHN0bXRJbnNlcnRVc2VyUmVjLT5iaW5kUGFyYW0oIjp1c2VybmFtZSIsICR1c2VybmFtZSk7CiAgICAgICAgICAgICRzdG10SW5zZXJ0VXNlclJlYy0+YmluZFBhcmFtKCI6bG9nZ2VkT3V0IiwgJGxvZ2dlZE91dCk7CgogICAgICAgICAgICAkc3RtdEluc2VydFVzZXJSZWMtPmV4ZWN1dGUoKTsKICAgICAgICAgICAgZWNobyAibG9nZ2VkVXNlck91dCI7CiAgICAgICAgfQogICAgfSBjYXRjaCAoUERPRXhjZXB0aW9uICRlKSB7CiAgICAgICAgZWNobyAiRXJyb3I6ICIgLiAkZS0+Z2V0TWVzc2FnZSgpOwogICAgfQp9IGVsc2UgaWYgKCFlbXB0eSgkX1BPU1RbImxvZ2dlZE91dCJdID09PSAnMycpKSB7CiAgICB0cnkgewogICAgICAgICRzdG10U2VsZWN0VXNlckxvZ2dlZENvdW50ID0gJGRiaC0+cHJlcGFyZSgiU0VMRUNUIHVzZXJuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBBQ1VzZXJMb2dpbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdIRVJFIGxvZ2dlZE91dCA9IDpsb2dnZWRPdXQiKTsKCiAgICAgICAgJGxvZ2dlZE91dCA9IDA7CgogICAgICAgICRzdG10U2VsZWN0VXNlckxvZ2dlZENvdW50LT5iaW5kUGFyYW0oIjpsb2dnZWRPdXQiLCAkbG9nZ2VkT3V0KTsKICAgICAgICAkc3RtdFNlbGVjdFVzZXJMb2dnZWRDb3VudC0+c2V0RmV0Y2hNb2RlKFBETzo6RkVUQ0hfQVNTT0MpOwogICAgICAgICRzdG10U2VsZWN0VXNlckxvZ2dlZENvdW50LT5leGVjdXRlKCk7CgogICAgICAgICRyb3dzID0gYXJyYXlfcmV2ZXJzZSgkc3RtdFNlbGVjdFVzZXJMb2dnZWRDb3VudC0+ZmV0Y2hBbGwoKSk7CgogICAgICAgIGlmIChjb3VudCgkcm93cykgPiAwKSB7CiAgICAgICAgICAgIGVjaG8gJHJvd3NbMF1bJ3VzZXJuYW1lJ107CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZWNobyAiIjsKICAgICAgICB9CiAgICB9IGNhdGNoIChQRE9FeGNlcHRpb24gJGUpIHsKICAgICAgICBlY2hvICJFcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCk7CiAgICB9Cn0gZWxzZSB7CiAgICBlY2hvICJBbiBlcnJvciBvY2N1cnJlZCI7Cn0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";
1636522912
AwuilbDvXz%3Abf8ae81bd52184d2cc8ffb482a889948-f094612b09697359767ad7e12bdb397d
s:7012:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjA6IkNyZWF0ZWQgYnkgUGhwU3Rvcm0uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQxOiJVc2VyOiBEYW50ZQpEYXRlOiA5LzI1LzIwMTcKVGltZTogNzo1NyBBTSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiZjA5NDYxMmIwOTY5NzM1OTc2N2FkN2UxMmJkYjM5N2QiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czoxNDoiRXZlbnREYXRlcy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxNDoiRXZlbnREYXRlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM0NDA6Ijw/cGhwCgovKioKICogQ3JlYXRlZCBieSBQaHBTdG9ybS4KICogVXNlcjogRGFudGUKICogRGF0ZTogOS8yNS8yMDE3CiAqIFRpbWU6IDc6NTcgQU0KICovCgovLyBVc2FnZSBmb3IgTXlTcWwKJHVzZXJuYW1lID0gIm5lYXJpenBlX05pY2tBIjsgLy8gIlcwMTE2MDAxOSI7CiRwYXNzd29yZCA9ICJEckZyeTIwMjAiOyAvLyAiTmljaG9sYXNjcyEiOwokaG9zdCA9ICJsb2NhbGhvc3QiOyAvL2RiLmNvb2xkb21haW4uY29tCiRkYm5hbWUgPSAibmVhcml6cGVfQW5pbWFsQ3Jvc3NpbmdEQiI7IC8vICJXMDExNjAwMTkiOwoKLyoqCiAqIFNldHVwIGRhdGFiYXNlCiAqLwp0cnkgewogICAgJGRiaCA9IG5ldyBQRE8oIm15c3FsOmhvc3Q9JGhvc3Q7ZGJuYW1lPSRkYm5hbWUiLCAkdXNlcm5hbWUsICRwYXNzd29yZCk7Cn0gY2F0Y2ggKFBET0V4Y2VwdGlvbiAkZXJyKSB7CiAgICBlY2hvICJJJ20gc29ycnkgdXNlciBEYXZlLiBJIGNhbid0IGRvIHRoYXQuIEVycm9yOiIgLiAkZXJyLT5nZXRNZXNzYWdlKCk7CiAgICBkaWUoIkVycm9yOiIgLiAkZXJyLT5nZXRNZXNzYWdlKCkpOwp9CgokZGJoLT5zZXRBdHRyaWJ1dGUoUERPOjpBVFRSX0VSUk1PREUsIFBETzo6RVJSTU9ERV9FWENFUFRJT04pOwoKLyoqCiAqIElmIGV2ZW50TmFtZSwgZXZlbnREZXNjcmlwdGlvbiwgYW5kIGV2ZW50RGF0ZSBhcmUgYWxsIHByb3ZpZGVkLCB3aWxsIGluc2VydCBhbiBldmVudCBpbnRvIHRoZSBkYXRhYmFzZS4KICogSWYgZXZlbnREYXRlIGFuZCBnZXQgYXJlIHByb3ZpZGVkLCB0aGlzIHdpbGwgcmV0dXJuIHRoZSBldmVudCBmcm9tIHRoZSBkYXRhYmFzZSBpbiBhIEpTT04uCiAqIElmIGV2ZW50RGF0ZSBpcyBudWxsIGFuZCBnZXQgaXMgKHZhbHVlID0gMiksIHRoaXMgaXMgdGhlIGluaXRpYWwgbG9hZCwgd2hpY2ggbG9hZHMgdGhlIGNhbGVuZGFyIGFuZCBwcm92aWRlcwogKiBkYXRlIGhpZ2hsaWdodGluZyBvbiBzYWlkIGNhbGVuZGFyLgogKiAKICogQHBhcmFtIFN0cmluZyBldmVudE5hbWVQYXJhbSBpcyB0aGUgZXZlbnQgbmFtZQogKiBAcGFyYW0gU3RyaW5nIGV2ZW50RGVzY3JpcHRpb25QYXJhbSBpcyB0aGUgZXZlbnQgZGVzY3JpcHRpb24KICogQHBhcmFtIFN0cmluZyBFdmVudERhdGVQYXJhbSBpcyB0aGUgZGF0ZQogKiBAcGFyYW0gU3RyaW5nIEV2ZW50RGF0ZVBhcmFtIGlzIHRoZSBkYXRlIHRvIGdldCBldmVudHMgZnJvbQogKiBAcGFyYW0gYm9vbGVhbiBnZXRQYXJhbSBpcyBqdXN0IHNvIHRoZSBQSFAga25vd3Mgd2hhdCB0byBjYWxsCiAqIAogKiBAcmV0dXJuIFN0cmluZyBOb3RpZmllcyB0aGUgdXNlciB0aGVpciBldmVudCB3YXMgYWRkZWQKICogT1IKICogQHJldHVybiBKU09OIFJldHVybnMgYSBKU09OIHdpdGggdGhlIGRldGFpbHMgb2YgYW4gZXZlbnQKICogT1IKICogQHJldHVybiBKU09OIFJldHVybnMgYSBKU09OIHdpdGggdGhlIGRhdGEgdG8gcG9wdWxhdGUgdGhlIGNhbGVuZGFyIG9uIHRoZSBmcm9udCBlbmQKICovCmlmICghZW1wdHkoJF9QT1NUWyJldmVudE5hbWUiXSkgJiYgIWVtcHR5KCRfUE9TVFsiZXZlbnREZXNjcmlwdGlvbiJdKSAmJiAhZW1wdHkoJF9QT1NUWyJldmVudERhdGUiXSkpIHsKICAgIHRyeSB7CgogICAgICAgICRzdG10SW5zZXJ0RXZlbnQgPSAkZGJoLT5wcmVwYXJlKCJJTlNFUlQgSU5UTyBBQ0NhbGVuZGFyRXZlbnRzKGV2ZW50TmFtZSwgZXZlbnREZXNjcmlwdGlvbiwgZXZlbnREYXRlKSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZBTFVFUyg6ZXZlbnROYW1lLCA6ZXZlbnREZXNjcmlwdGlvbiwgOmV2ZW50RGF0ZSkiKTsKICAgICAgICAkZXZlbnROYW1lID0gJF9QT1NUWyJldmVudE5hbWUiXTsKICAgICAgICAkZXZlbnREZXNjcmlwdGlvbiA9ICRfUE9TVFsiZXZlbnREZXNjcmlwdGlvbiJdOwogICAgICAgICRldmVudERhdGUgPSAkX1BPU1RbImV2ZW50RGF0ZSJdOwoKICAgICAgICAkc3RtdEluc2VydEV2ZW50LT5iaW5kUGFyYW0oIjpldmVudE5hbWUiLCAkZXZlbnROYW1lKTsKICAgICAgICAkc3RtdEluc2VydEV2ZW50LT5iaW5kUGFyYW0oIjpldmVudERlc2NyaXB0aW9uIiwgJGV2ZW50RGVzY3JpcHRpb24pOwogICAgICAgICRzdG10SW5zZXJ0RXZlbnQtPmJpbmRQYXJhbSgiOmV2ZW50RGF0ZSIsICRldmVudERhdGUpOwogICAgICAgICRzdG10SW5zZXJ0RXZlbnQtPmV4ZWN1dGUoKTsKCiAgICAgICAgZWNobyAiRXZlbnQgaW5zZXJ0ZWQgc3VjY2Vzc2Z1bGx5ISI7CiAgICB9IGNhdGNoIChQRE9FeGNlcHRpb24gJGUpIHsKICAgICAgICBlY2hvICJFcnJvcjogIiAuICRlLT5nZXRNZXNzYWdlKCk7CiAgICB9Cn0gZWxzZSBpZiAoIWVtcHR5KCRfUE9TVFsiZXZlbnREYXRlIl0pICYmICFlbXB0eSgkX1BPU1RbImdldCJdKSkgewogICAgdHJ5IHsKCiAgICAgICAgJHN0bXRTZWxlY3RFdmVudCA9ICRkYmgtPnByZXBhcmUoIlNFTEVDVCAqCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NIEFDQ2FsZW5kYXJFdmVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdIRVJFIGV2ZW50RGF0ZSA9IDpldmVudERhdGUiKTsKICAgICAgICAkZXZlbnREYXRlID0gJF9QT1NUWyJldmVudERhdGUiXTsKCiAgICAgICAgJHN0bXRTZWxlY3RFdmVudC0+YmluZFBhcmFtKCI6ZXZlbnREYXRlIiwgJGV2ZW50RGF0ZSk7CiAgICAgICAgJHN0bXRTZWxlY3RFdmVudC0+ZXhlY3V0ZSgpOwoKICAgICAgICAkcm93ID0gJHN0bXRTZWxlY3RFdmVudC0+ZmV0Y2hBbGwoUERPOjpGRVRDSF9BU1NPQyk7CiAgICAgICAgZWNobyBqc29uX2VuY29kZSgkcm93KTsKICAgIH0gY2F0Y2ggKFBET0V4Y2VwdGlvbiAkZSkgewogICAgICAgIGVjaG8gIkVycm9yOiAiIC4gJGUtPmdldE1lc3NhZ2UoKTsKICAgIH0KfSBlbHNlIGlmIChlbXB0eSgkX1BPU1RbImV2ZW50RGF0ZSJdKSAmJiAoIWVtcHR5KCRfUE9TVFsiZ2V0Il0pICYmICRfUE9TVFsiZ2V0Il0gPT09ICcyJykpIHsKICAgIHRyeSB7CgogICAgICAgICRzdG10U2VsZWN0RXZlbnQgPSAkZGJoLT5wcmVwYXJlKCJTRUxFQ1QgZXZlbnREYXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NIEFDQ2FsZW5kYXJFdmVudHMiKTsKCiAgICAgICAgJHN0bXRTZWxlY3RFdmVudC0+ZXhlY3V0ZSgpOwoKICAgICAgICAkcm93ID0gJHN0bXRTZWxlY3RFdmVudC0+ZmV0Y2hBbGwoUERPOjpGRVRDSF9BU1NPQyk7CiAgICAgICAgZWNobyBqc29uX2VuY29kZSgkcm93KTsKICAgIH0gY2F0Y2ggKFBET0V4Y2VwdGlvbiAkZSkgewogICAgICAgIGVjaG8gIkVycm9yOiAiIC4gJGUtPmdldE1lc3NhZ2UoKTsKICAgIH0KfSBlbHNlIHsKICAgIGVjaG8gIlNvcnJ5LCBhbiBlcnJvciBvY2N1cnJlZCI7Cn0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";